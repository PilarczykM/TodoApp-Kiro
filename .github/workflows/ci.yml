name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4

    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        version: "latest"

    - name: Set up Python ${{ matrix.python-version }}
      run: uv python install ${{ matrix.python-version }}

    - name: Install dependencies
      run: uv sync

    - name: Run linting with ruff
      run: uv run ruff check src/ tests/

    - name: Run formatting check with ruff
      run: uv run ruff format --check src/ tests/

    - name: Run type checking with mypy
      run: uv run mypy src/

    - name: Run tests with coverage
      run: uv run pytest tests/ --cov=src --cov-report=xml --cov-report=term-missing -v

  code-quality:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        version: "latest"

    - name: Set up Python
      run: uv python install 3.12

    - name: Install dependencies
      run: uv sync

    - name: Check code formatting
      run: uv run ruff format --check src/ tests/

    - name: Run comprehensive linting
      run: uv run ruff check src/ tests/ --output-format=github

    - name: Run type checking
      run: uv run mypy src/ --show-error-codes

  security:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        version: "latest"

    - name: Set up Python
      run: uv python install 3.12

    - name: Install dependencies
      run: uv sync

    - name: Run security checks with bandit
      run: |
        uv add --dev bandit[toml]
        uv run bandit -r src/ -f json -o bandit-report.json || true
        uv run bandit -r src/
